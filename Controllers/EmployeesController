using Sabio.Web.Domain;
using Sabio.Web.Models.ViewModels;
using Sabio.Web.Services;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace Sabio.Web.Controllers
{
    [RoutePrefix("Employees")]
    public class EmployeesController : BaseController
    {
        ISecurityTokenService _securityTokenService;

        public EmployeesController (ISecurityTokenService securityTokenService)
        {
            _securityTokenService = securityTokenService;
        }

        // GET: Employees
        public ActionResult Index()
        {
            return View();
        }
         
        [Route("Create")]
        [Route("{id:int}/edit")]
        [Authorize(Roles = "Admin")]
        public ActionResult CreateEdit(int? id = null)
        {
            EmployeeViewModel employee = new EmployeeViewModel();
            employee.Id = id ?? 0;
            employee.AccountId = null;
            return View(employee);
        }

        [Route("Register/{tokenGuid}")]
        public ActionResult Register(string tokenGuid)
        {
            Guid guid = Guid.Parse(tokenGuid);
            SecurityToken Token = _securityTokenService.SelectByGuid(guid);
            DateTime now = DateTime.UtcNow;
            if (now < Token.ExpirationDate)
            {
                EmployeeRegisterViewModel employee = new EmployeeRegisterViewModel();
                employee.Guid = guid;
                employee.Email = Token.UserEmail;
                return View(employee);
            }
            return View("ConfirmationEmailExpired");
        }

        [Route("Home")]
        [Authorize(Roles ="Admin, Supervisor, User")]
        public ActionResult Home(int id = 0)
        {
            EmployeeViewModel model = new EmployeeViewModel();
            DecorateViewModel(model);
            model.Id = id > 0 ? id : model.EmployeeId;
            return View(model);
        }

        [Route("{id:int}/Home")]
        [Authorize(Roles = "Admin")]
        public ActionResult Impersonate(int id = 0)
        {
            EmployeeViewModel model = new EmployeeViewModel();
            DecorateViewModel(model);
            model.Id = id > 0 ? id : model.EmployeeId;         
            return View("Home",model);
        }

      
        [Route("{id:int}")]
        public ActionResult details(int? id = null)
        {
            EmployeeViewModel employee = new EmployeeViewModel();
            employee.Id = id ?? 0;
            employee.AccountId = null;
            return View(employee);
        }
    }
}
